name: CI - Container Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-shared:
    name: Test Shared Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'containers/shared/package-lock.json'
      
      - name: Install shared dependencies
        run: cd containers/shared && npm ci
      
      - name: Build shared package
        run: cd containers/shared && npm run build
      
      - name: Test shared package
        run: cd containers/shared && npm test

  test-containers:
    name: Test Container - ${{ matrix.container }}
    runs-on: ubuntu-latest
    needs: test-shared
    strategy:
      matrix:
        container: [bunkbot, djcova, starbunk-dnd, covabot]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'containers/${{ matrix.container }}/package-lock.json'
      
      - name: Install shared dependencies
        run: cd containers/shared && npm ci && npm run build
      
      - name: Install container dependencies
        run: cd containers/${{ matrix.container }} && npm ci
      
      - name: Build container
        run: cd containers/${{ matrix.container }} && npm run build
      
      - name: Test container
        run: cd containers/${{ matrix.container }} && npm test

  build-containers:
    name: Build Docker Container - ${{ matrix.container }}
    runs-on: ubuntu-latest
    needs: [test-shared, test-containers]
    strategy:
      matrix:
        container: [bunkbot, djcova, starbunk-dnd, covabot]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: containers/${{ matrix.container }}/Dockerfile
          push: false
          tags: starbunk-${{ matrix.container }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build-containers
    steps:
      - uses: actions/checkout@v4
      
      - name: Create test environment file
        run: |
          echo "STARBUNK_TOKEN=test_token" > .env
          echo "DATABASE_URL=postgresql://test:test@localhost:5432/test" >> .env
          echo "DEBUG=true" >> .env
      
      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_DB=test \
            -e POSTGRES_USER=test \
            -e POSTGRES_PASSWORD=test \
            -p 5432:5432 \
            postgres:15-alpine
      
      - name: Wait for PostgreSQL
        run: |
          timeout 30 bash -c 'until docker exec postgres pg_isready -U test; do sleep 1; done'
      
      - name: Test Docker Compose build
        run: docker compose build
      
      - name: Cleanup
        run: docker stop postgres && docker rm postgres
