# Production Environment Configuration for Starbunk Discord Bot
# Copy this file to .env and fill in your actual values

# =============================================================================
# DISCORD CONFIGURATION (REQUIRED)
# =============================================================================
# Main Discord bot token - get from Discord Developer Portal
STARBUNK_TOKEN=your_discord_bot_token_here

# Secondary Discord bot token for D&D bridge functionality
SNOWBUNK_TOKEN=your_secondary_discord_bot_token_here

# Discord application client ID
CLIENT_ID=your_discord_client_id_here

# Discord guild (server) ID where the bot operates
GUILD_ID=your_discord_guild_id_here

# Optional webhook URL for enhanced message sending
WEBHOOK_URL=your_webhook_url_here

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# PostgreSQL database configuration
POSTGRES_DB=starbunk
POSTGRES_USER=starbunk
POSTGRES_PASSWORD=your_secure_database_password_here
POSTGRES_PORT=5432

# Full database URL (auto-generated if not provided)
# DATABASE_URL=postgresql://starbunk:your_password@postgres:5432/starbunk

# =============================================================================
# AI/LLM CONFIGURATION (REQUIRED FOR AI FEATURES)
# =============================================================================
# OpenAI API configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_DEFAULT_MODEL=gpt-4o-mini

# Optional Ollama configuration for local LLM
OLLAMA_API_URL=http://localhost:11434
OLLAMA_DEFAULT_MODEL=llama3

# =============================================================================
# SERVICE PORT CONFIGURATION (OPTIONAL)
# =============================================================================
# External ports for each service (defaults shown)
BUNKBOT_PORT=3000
DJCOVA_PORT=3001
STARBUNK_DND_PORT=3002
COVABOT_PORT=3003

# =============================================================================
# LOGGING AND DEBUG CONFIGURATION (OPTIONAL)
# =============================================================================
# Log level: error, warn, info, debug
LOG_LEVEL=info

# Debug mode (true/false)
DEBUG_MODE=false

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================
# 1. Ensure all REQUIRED environment variables are set
# 2. Use strong, unique passwords for database access
# 3. Keep API keys secure and rotate them regularly
# 4. Monitor logs and resource usage after deployment
# 5. Set up proper backup procedures for persistent data
# 6. Consider using Docker secrets for sensitive values in production
#
# To deploy:
# 1. Copy this file to .env
# 2. Fill in all required values
# 3. Run: docker-compose pull
# 4. Run: docker-compose up -d
# 5. Check logs: docker-compose logs -f
#
# To update:
# 1. Run: docker-compose pull
# 2. Run: docker-compose up -d
#
# To backup data:
# 1. Database: docker-compose exec postgres pg_dump -U starbunk starbunk > backup.sql
# 2. Volumes: docker run --rm -v starbunk_postgres_data:/data -v $(pwd):/backup alpine tar czf /backup/postgres_backup.tar.gz -C /data .
