name: Reusable Docker Build and Push

on:
  workflow_call:
    inputs:
      container_name:
        description: 'Name of the container to build (bunkbot, djcova, starbunk-dnd, covabot)'
        required: true
        type: string
      image_tag:
        description: 'Tag for the Docker image'
        required: true
        type: string
      push_image:
        description: 'Whether to push the image to registry'
        required: false
        type: boolean
        default: true
      registry:
        description: 'Container registry URL'
        required: false
        type: string
        default: 'ghcr.io'
    secrets:
      GITHUB_TOKEN:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Debug inputs
        run: |
          echo "Container name: ${{ inputs.container_name }}"
          echo "Image tag: ${{ inputs.image_tag }}"
          echo "Push image: ${{ inputs.push_image }}"
          echo "Registry: ${{ inputs.registry }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        if: ${{ inputs.push_image }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.container_name }}
          tags: |
            type=raw,value=${{ inputs.image_tag }}
            
      - name: Verify container directory exists
        run: |
          if [ ! -d "containers/${{ inputs.container_name }}" ]; then
            echo "Error: Container directory containers/${{ inputs.container_name }} does not exist"
            exit 1
          fi
          if [ ! -f "containers/${{ inputs.container_name }}/Dockerfile" ]; then
            echo "Error: Dockerfile not found in containers/${{ inputs.container_name }}"
            exit 1
          fi
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: containers/${{ inputs.container_name }}/Dockerfile
          push: ${{ inputs.push_image }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          
      - name: Output image details
        run: |
          echo "Built image: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.container_name }}:${{ inputs.image_tag }}"
          echo "Container: ${{ inputs.container_name }}"
          echo "Tag: ${{ inputs.image_tag }}"
          echo "Pushed: ${{ inputs.push_image }}"
