name: CI

on:
    pull_request:
        branches: [main, develop]
    push:
        branches: [main, develop]

jobs:
    determine_changes:
        runs-on: ubuntu-latest
        outputs:
            app_changed: ${{ steps.filter.outputs.app }}
            test_changed: ${{ steps.filter.outputs.test }}
            build_changed: ${{ steps.filter.outputs.build }}
        steps:
            - uses: actions/checkout@v3
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      app:
                          - 'src/**'
                          - '!src/**/*.test.ts'
                          - '!src/**/*.spec.ts'
                          - '!src/__tests__/**'
                      test:
                          - 'src/**/*.test.ts'
                          - 'src/**/*.spec.ts'
                          - 'src/__tests__/**'
                      build:
                          - 'package.json'
                          - 'package-lock.json'
                          - 'Dockerfile'
                          - 'docker-compose.yml'
                          - 'tsconfig.json'
                          - '.github/**'

    test:
        needs: determine_changes
        if: ${{ needs.determine_changes.outputs.app_changed == 'true' || needs.determine_changes.outputs.test_changed == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Run Tests
              run: |
                  npm ci
                  npm test

    lint:
        needs: determine_changes
        if: ${{ needs.determine_changes.outputs.app_changed == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Run Linter
              run: |
                  npm ci
                  npm run lint

    build:
        needs: determine_changes
        if: ${{ needs.determine_changes.outputs.app_changed == 'true' || needs.determine_changes.outputs.build_changed == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Build and Push Docker Image
              run: |
                  docker build -t your-image-name .

    docker:
        needs: lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
