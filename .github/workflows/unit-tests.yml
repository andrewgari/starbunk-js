name: Unit Tests

on:
    workflow_call:
        # This allows the workflow to be called from other workflows
    pull_request:
        types: [opened, synchronize]
        paths:
            - 'src/**/*.ts'
            - 'src/**/*.js'
            - 'test/**/*.ts'
            - 'test/**/*.js'
            - 'tests/**/*.ts'
            - 'tests/**/*.js'
            - 'package.json'
            - 'package-lock.json'
            - 'jest.config.js'
            - 'tsconfig.json'
            - '.github/workflows/unit-tests.yml'
    push:
        branches:
            - main
        paths:
            - 'src/**/*.ts'
            - 'src/**/*.js'
            - 'test/**/*.ts'
            - 'test/**/*.js'
            - 'tests/**/*.ts'
            - 'tests/**/*.js'
            - 'package.json'
            - 'package-lock.json'
            - 'jest.config.js'
            - 'tsconfig.json'
            - '.github/workflows/unit-tests.yml'
    workflow_dispatch: # Allow manual trigger

jobs:
    setup:
        uses: ./.github/workflows/setup.yml

    test:
        name: Run Unit Tests
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🔧 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: 📦 Install dependencies
              if: ${{ needs.setup.outputs.cache-hit != 'true' }}
              run: npm ci

            - name: 🧪 Run tests
              run: |
                  echo "::group::Running unit tests"
                  npm test
                  echo "::endgroup::"
                  echo "✅ All tests passed successfully"

            - name: 📊 Upload test coverage
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: test-coverage
                  path: coverage/
                  retention-days: 7

            - name: 📝 Test summary
              if: always()
              run: |
                  echo "### ✨ Test Results ✨" >> $GITHUB_STEP_SUMMARY
                  echo "| Category | Status |" >> $GITHUB_STEP_SUMMARY
                  echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
                  echo "| Unit Tests | ${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Coverage Report | 📊 [Available as artifact](../actions/runs/${{ github.run_id }}) |" >> $GITHUB_STEP_SUMMARY
