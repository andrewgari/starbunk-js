/// <reference types="cypress" />
import channelIDs from '../../../src/discord/channelIDs';
import BOT_CONSTANTS from '../../support/botConstants';

/**
 * E2E tests for MusicCorrectBot
 *
 * These tests verify that MusicCorrectBot responds correctly to specific messages
 * and ignores messages that don't match its trigger conditions.
 */
describe('MusicCorrectBot E2E Tests', () => {
  // In the model file it's "MusicCorrectBot" but in Cypress tests it's "MusicCorrectBot" with a hyphen
  const { RESPONSE, TEST } = BOT_CONSTANTS.MUSICCORRECTBOT_BOT;
  const BOT_NAME_IN_DISCORD = 'MusicCorrectBot';

  // Create a flexible pattern for matching responses that might have case or punctuation differences
  const RESPONSE_PATTERN = new RegExp(RESPONSE.replace(/[.*+?^${}()|[\]\\]/g, '\\$&').replace(/\.$/, '\\.?'), 'i');

  before(() => {
    // Initialize Discord client before running tests
    cy.initDiscordClient();
  });

  // Add your test cases here using the constants
  // Example:
  // it('should respond to trigger message', () => {
  //   cy.sendDiscordMessage(
  //     TEST.MESSAGE.TRIGGER_MESSAGE,
  //     BOT_NAME_IN_DISCORD,
  //     RESPONSE_PATTERN,
  //     channelIDs.NebulaChat
  //   );
  // });

  // it('should NOT respond to unrelated message', () => {
  //   cy.task('sendDiscordMessage', {
  //     message: TEST.MESSAGE.UNRELATED,
  //     channelId: channelIDs.NebulaChat,
  //     expectResponse: false
  //   }).then((result) => {
  //     expect(result).to.equal(null);
  //   });
  // });
});
