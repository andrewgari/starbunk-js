# Podman Compose for Starbunk Services
# ====================================
# This is the main Podman Compose file equivalent to docker-compose.yml
#
# Usage:
#   podman-compose up -d
#   podman-compose -f podman-compose.yml up -d
#
# Prerequisites:
#   - Configure environment variables in .env file
#   - Ensure PostgreSQL credentials are set
#   - Verify all required images are available

version: '3.8'

services:
  # BunkBot - Reply bots and admin commands
  bunkbot:
    image: ghcr.io/andrewgari/bunkbot:latest
    container_name: starbunk-bunkbot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - STARBUNK_TOKEN=${STARBUNK_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_DEFAULT_MODEL=${OPENAI_DEFAULT_MODEL:-gpt-4o-mini}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - BUNKBOT_HEALTH_PORT=${BUNKBOT_HEALTH_PORT:-3002}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENABLE_STRUCTURED_LOGGING=${ENABLE_STRUCTURED_LOGGING:-true}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - PROMETHEUS_URL=${PROMETHEUS_URL:-}
      - LOKI_URL=${LOKI_URL:-}
    ports:
      - "${BUNKBOT_HEALTH_PORT:-3002}:${BUNKBOT_HEALTH_PORT:-3002}"
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "curl -f http://localhost:3002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - starbunk-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # DJCova - Music service
  djcova:
    image: ghcr.io/andrewgari/djcova:latest
    container_name: starbunk-djcova
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - STARBUNK_TOKEN=${STARBUNK_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DJCOVA_HEALTH_PORT=${DJCOVA_HEALTH_PORT:-3004}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENABLE_STRUCTURED_LOGGING=${ENABLE_STRUCTURED_LOGGING:-true}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - PROMETHEUS_URL=${PROMETHEUS_URL:-}
      - LOKI_URL=${LOKI_URL:-}
    volumes:
      - djcova_cache:/app/cache
      - djcova_temp:/tmp
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "curl -f http://localhost:3004/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - starbunk-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Starbunk-DND - D&D features and bridge
  starbunk-dnd:
    image: ghcr.io/andrewgari/starbunk-dnd:latest
    container_name: starbunk-dnd
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - STARBUNK_TOKEN=${STARBUNK_TOKEN}
      - SNOWBUNK_TOKEN=${SNOWBUNK_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_DEFAULT_MODEL=${OPENAI_DEFAULT_MODEL:-gpt-4o-mini}
      - OLLAMA_API_URL=${OLLAMA_API_URL:-}
      - OLLAMA_DEFAULT_MODEL=${OLLAMA_DEFAULT_MODEL:-}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - STARBUNK_DND_HEALTH_PORT=${STARBUNK_DND_HEALTH_PORT:-3005}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENABLE_STRUCTURED_LOGGING=${ENABLE_STRUCTURED_LOGGING:-true}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - PROMETHEUS_URL=${PROMETHEUS_URL:-}
      - LOKI_URL=${LOKI_URL:-}
    volumes:
      - dnd_data:/app/data
      - dnd_campaigns:/app/data/campaigns
      - dnd_context:/app/data/llm_context
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "curl -f http://localhost:3005/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - starbunk-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # CovaBot - AI personality bot
  covabot:
    image: ghcr.io/andrewgari/covabot:latest
    container_name: starbunk-covabot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - STARBUNK_TOKEN=${STARBUNK_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_DEFAULT_MODEL=${OPENAI_DEFAULT_MODEL:-gpt-4o-mini}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - COVABOT_HEALTH_PORT=${COVABOT_HEALTH_PORT:-3003}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENABLE_STRUCTURED_LOGGING=${ENABLE_STRUCTURED_LOGGING:-true}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - PROMETHEUS_URL=${PROMETHEUS_URL:-}
      - LOKI_URL=${LOKI_URL:-}
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "curl -f http://localhost:3003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - starbunk-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

# Named volumes for persistent data
volumes:
  djcova_cache:
    driver: local
  djcova_temp:
    driver: local
  dnd_data:
    driver: local
  dnd_campaigns:
    driver: local
  dnd_context:
    driver: local

# Custom network for service communication
networks:
  starbunk-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
