# Unraid Docker Compose Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# UNRAID CONFIGURATION
# =============================================================================

# Unraid appdata path - standard location for persistent data
# This should point to your Unraid appdata share
UNRAID_APPDATA_PATH=/mnt/user/appdata/starbunk

# =============================================================================
# DISCORD BOT CONFIGURATION
# =============================================================================

# Primary Discord bot token (required)
# Get this from https://discord.com/developers/applications
STARBUNK_TOKEN=your_discord_bot_token_here

# Secondary Discord bot token (optional, for DND features)
SNOWBUNK_TOKEN=your_secondary_bot_token_here

# Discord application client ID (required)
CLIENT_ID=your_discord_client_id

# Discord server/guild ID where the bot will operate (required)
GUILD_ID=your_discord_server_id

# Discord webhook URL for notifications (optional)
WEBHOOK_URL=https://discord.com/api/webhooks/your_webhook_url

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL database settings
POSTGRES_DB=starbunk
POSTGRES_USER=starbunk
POSTGRES_PASSWORD=your_secure_database_password_here
POSTGRES_PORT=5432

# Database URL (auto-generated from above settings)
# Only override if using external database
# DATABASE_URL=postgresql://user:password@host:5432/database

# =============================================================================
# AI/LLM CONFIGURATION
# =============================================================================

# OpenAI API configuration (required for AI features)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_DEFAULT_MODEL=gpt-4o-mini

# Ollama configuration (optional, for local LLM)
OLLAMA_API_URL=http://your-ollama-server:11434
OLLAMA_DEFAULT_MODEL=llama2

# =============================================================================
# COVABOT WEB INTERFACE
# =============================================================================

# Port for CovaBot personality management web interface
COVABOT_WEB_PORT=3001

# API key for securing the web interface (recommended)
COVABOT_API_KEY=your_secure_api_key_for_web_interface

# Storage mode: false for file storage, true for database storage
USE_DATABASE=false

# =============================================================================
# DEBUG AND TESTING
# =============================================================================

# Enable debug mode (true/false)
DEBUG_MODE=false

# Comma-separated list of Discord server IDs for testing
# When DEBUG_MODE is true, bot will only respond in these servers
TESTING_SERVER_IDS=your_test_server_id_1,your_test_server_id_2

# Comma-separated list of Discord channel IDs for testing
# When DEBUG_MODE is true, bot will only respond in these channels
TESTING_CHANNEL_IDS=your_test_channel_id_1,your_test_channel_id_2

# Logging level (debug, info, warn, error)
LOG_LEVEL=info

# =============================================================================
# UNRAID-SPECIFIC NOTES
# =============================================================================

# 1. Data Persistence:
#    All bot data will be stored in /mnt/user/appdata/starbunk/
#    This includes:
#    - PostgreSQL database files
#    - CovaBot personality notes
#    - DJCova music cache
#    - D&D campaign data
#
# 2. Web Interface Access:
#    CovaBot management interface will be available at:
#    http://your-unraid-ip:3001
#
# 3. Port Configuration:
#    Make sure the following ports are available:
#    - 5432: PostgreSQL database
#    - 3001: CovaBot web interface
#
# 4. File Permissions:
#    Ensure the appdata directory has proper permissions:
#    chown -R 99:100 /mnt/user/appdata/starbunk
#    chmod -R 755 /mnt/user/appdata/starbunk
#
# 5. Backup Strategy:
#    Regular backups of /mnt/user/appdata/starbunk/ are recommended
#    Database can be backed up with:
#    docker exec starbunk-postgres pg_dump -U starbunk starbunk > backup.sql
#
# 6. Updates:
#    To update containers:
#    docker-compose pull && docker-compose up -d
#
# 7. Monitoring:
#    Check container health with:
#    docker-compose ps
#    docker-compose logs [service_name]

# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================

# 1. Keep your .env file secure and never commit it to version control
# 2. Use strong passwords for POSTGRES_PASSWORD and COVABOT_API_KEY
# 3. Limit external access to only necessary ports
# 4. Regularly update container images for security patches
# 5. Consider using Unraid's built-in VPN for remote access

# =============================================================================
# DEPLOYMENT COMMANDS
# =============================================================================

# Standard deployment:
# docker-compose up -d

# Latest stable images:
# docker-compose -f docker-compose.latest.yml up -d

# Snapshot testing:
# export SNAPSHOT_TAG=pr-123-snapshot
# docker-compose -f docker-compose.snapshot.yml up -d

# View logs:
# docker-compose logs -f [service_name]

# Stop services:
# docker-compose down

# Update and restart:
# docker-compose pull && docker-compose up -d
