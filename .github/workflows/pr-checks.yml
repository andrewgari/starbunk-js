name: PR Checks

on:
    pull_request:
        types: [opened, synchronize, reopened]
        paths-ignore:
            - '**.md'
            - '.github/ISSUE_TEMPLATE/**'
            - 'docs/**'

jobs:
    lint:
        name: üîç Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Run Lint
              run: npm run lint

    type-check:
        name: üîç Type Check
        runs-on: ubuntu-latest
        needs: [lint]
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Type Check Main Code
              run: npm run type-check:main

            - name: Type Check Cypress Code
              run: npm run type-check:cypress

    build:
        name: üî® Build
        runs-on: ubuntu-latest
        needs: [type-check]
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Build App
              run: npm run build

            - name: Upload Build Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: build-artifacts
                  path: dist/
                  if-no-files-found: error

    unit-test:
        name: üß™ Unit Tests
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Download Build Artifacts
              uses: actions/download-artifact@v3
              with:
                  name: build-artifacts
                  path: dist/

            - name: Run Unit Tests
              run: npm run test

    e2e-test:
        name: ü§ñ E2E Bot Tests
        runs-on: ubuntu-latest
        needs: [unit-test]
        if: ${{ contains(github.event.pull_request.changed_files, 'src/starbunk/bots/') || contains(github.event.pull_request.changed_files, 'cypress/e2e/bots/') }}
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Download Build Artifacts
              uses: actions/download-artifact@v3
              with:
                  name: build-artifacts
                  path: dist/

            - name: Create .env file
              run: |
                  echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
                  echo "NODE_ENV=test" >> .env

            - name: Run Bot Tests
              run: npm run test:bots

            - name: Upload Test Screenshots
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: cypress-screenshots
                  path: cypress/screenshots
                  if-no-files-found: ignore

    docker-build:
        name: üê≥ Docker Build
        runs-on: ubuntu-latest
        needs: [unit-test]
        if: ${{ success() && (contains(github.event.pull_request.changed_files, 'Dockerfile') || contains(github.event.pull_request.changed_files, '.dockerignore')) }}
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  load: true
                  tags: ${{ github.repository }}:pr-${{ github.event.pull_request.number }}
